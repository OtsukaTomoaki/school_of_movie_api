# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  REDIS_URL: localhost:6379

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.1']

    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: myrootpass
          MYSQL_DATABASE: funny_cats_api_development
          MYSQL_USER: myuser
          MYSQL_PASSWORD: mypass
        ports:
          - 3306:3306
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Bundler and gem install
        run: |
          sudo apt-get update -qq && sudo apt-get install -y cron libmecab2 libmecab-dev mecab mecab-ipadic mecab-ipadic-utf8 mecab-utils
          gem install bundler
          gem install mecab natto
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: Setup test data
        shell: bash
        run: |
          cp auth/service.key.dummy auth/service.key
          rm config/database.yml
          cp config/database.yml.ci config/database.yml
        env:
          RAILS_ENV: test

      - name: Database create and migrate
        shell: bash
        run: |
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:migrate RAILS_ENV=test
        env:
          RAILS_ENV: test

      - name: Run tests
        shell: bash
        run: |
          bundle exec rspec
        env:
          RAILS_ENV: test
