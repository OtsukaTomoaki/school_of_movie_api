# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Genarate ER Diagram

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  REDIS_HOST: 127.0.0.1:6379

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.1']
    env:
      RAILS_ENV: test
      RACK_ENV: test
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      RAILS_SERVE_STATIC_FILES: "true"
      RAILS_LOG_TO_STDOUT: "true"
      RAILS_MAX_THREADS: 5
      DOMAIN: 'localhost:3000'
      ROOT_URL: 'http://localhost:8081'
      SPA_DOMAIN: 'localhost'
      MYSQL_HOST: db

    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: myrootpass
          MYSQL_DATABASE: school_of_movie_api_development
          MYSQL_USER: myuser
          MYSQL_PASSWORD: mypass
        ports:
          - 3306:3306
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Bundler and gem install
        run: |
          sudo apt-get update -qq && sudo apt-get install -y cron libmecab2 libmecab-dev mecab mecab-ipadic mecab-ipadic-utf8 mecab-utils
          gem install bundler
          gem install mecab natto
          bundle install --jobs 4 --retry 3 --path vendor/bundle
          wget https://github.com/k1LoW/tbls/releases/download/v1.19.0/tbls_v1.19.0_linux_amd64.tar.gz
          tar zxvf tbls_v1.19.0_linux_amd64.tar.gz

      - name: Setup test data
        shell: bash
        run: |
          cp auth/service.key.dummy auth/service.key
          rm config/database.yml
          cp config/database.yml.ci config/database.yml
        env:
          RAILS_ENV: test

      - name: Database create and migrate
        shell: bash
        run: |
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:migrate RAILS_ENV=test
        env:
          RAILS_ENV: test

      - name: Checkout base branch
        uses: actions/checkout@v3
      
      - name: Setup tbls
        uses: k1low/setup-tbls@v1
    
      - name: Run tbls
        env:
          DATABASE: test_db
        # --force をつけるとすでにあるファイルに対して上書きすることが可能
        run: tbls doc

      - name: Load PR Infomation
        id: load_pr
        run: |
          pr_url=$(gh pr list --state merged --search "sha:${{ github.sha }}" --json "url" -q ".[0].url")
          pr_title=$(gh pr list --state merged --search "sha:${{ github.sha }}" --json "title" -q ".[0].title")
          pr_author=$(gh pr list --state merged --search "sha:${{ github.sha }}" --json "author" -q ".[0].author.login")
          echo "pr_url=${pr_url}" >> $GITHUB_OUTPUT
          echo "pr_title=${pr_title}" >> $GITHUB_OUTPUT
          echo "pr_author=${pr_author}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Update generated documentation"
          body: |
            [${{ steps.load_pr.outputs.pr_title }}](${{ steps.load_pr.outputs.pr_url }}) でスキーマが更新されたのでスキーマのドキュメントも更新します
          commit-message: "update generated documentation"
          base: develop
          branch: feat/update-generated-docs
          reviewers: ${{ steps.load_pr.outputs.pr_author }}
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>